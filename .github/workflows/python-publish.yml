name: Publish Python Package

on:
  release:
    types: [published]

run-name: Publish ${{ github.event.release.name }}

env:
  FILE_PATH: miniopy_async/__init__.py
  NAME: L-ING
  EMAIL: hlf01@icloud.com
  GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  RELEASE_VERSION: ${{ github.event.release.name }}

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'hlf20010508'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ env.GITHUB_TOKEN }}
    - name: Update Version
      run: |
        sed -i 's/__version__ = .*/__version__ = '\"$RELEASE_VERSION\"'/g' $FILE_PATH
        sed -i 's/version = .*/version = '\"$RELEASE_VERSION\"'/g' pyproject.toml
    - name: Commit and Push
      run: |
        git config --global user.name $NAME
        git config --global user.email $EMAIL
        git add -A
        if git diff-index --quiet HEAD --; then
            echo "Bypass commit."
        else
            git commit -m "chore: update version to $RELEASE_VERSION"
            git tag -f $RELEASE_VERSION
            git push origin HEAD:master
            git push origin HEAD:master --tags -f
        fi
    - name: Build and Publish to PyPI
      uses: JRubics/poetry-publish@v2.1
      with:
        python_version: "3.12"
        poetry_version: "==1.8.4"
        pypi_token: ${{ env.PYPI_TOKEN }}
